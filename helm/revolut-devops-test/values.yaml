# Default values for revolut-devops-test.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# If the application uses embedded SurrealDB as a storage backend this value
# SHOULD NOT BE MODIFIED!
replicaCount: 1

config:
  logLevel: info
  logEncoder: json
  dataDir: /app/data

image:
  # This repository doesn't exist, it's just for demonstration purposes
  repository: europe-west1-docker.pkg.dev/local-bebop-427012-r4/revolut-demo/test
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}

securityContext: 
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 999

service:
  type: ClusterIP
  port: 4200

healthService:
  type: ClusterIP
  port: 4300

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: kamil-assignment.revolut.dev
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /health
    port: health
readinessProbe:
  httpGet:
    path: /health
    port: health

persistence:
  enabled: true
  accessMode: ReadWriteOnce
  size: 200Mi

  # Set to the storage class that is supported by your cluster
  storageClass: "standard"

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
